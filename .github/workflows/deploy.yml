name: Deploy App

on:
    workflow_run:
        workflows: ["go vet test", "Test Build App"]
        types:
        - completed
        branches:
        - main
jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
        DEPLOY_DIRECTORY: /root/apps/monitor
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.22
      - name: Build app
        run: |
          go mod download
          go build -o monitor ./cmd/main.go
      - name: Deploy to VM
        run: |
          sudo apt-get install -y ssh rsync
          echo "$DEPLOY_SSH_KEY" > deploy_key.pem
          chmod 600 deploy_key.pem
          ssh -i deploy_key.pem -o StrictHostKeyChecking=no ${{ secrets.DEPLOY_SERVER }} "mkdir -p ${{ env.DEPLOY_DIRECTORY }}"
          rsync -avz -e 'ssh -i deploy_key.pem -o StrictHostKeyChecking=no' --exclude='.git' ./ ${{ secrets.DEPLOY_SERVER }}:${{ env.DEPLOY_DIRECTORY }}
        env:
          DEPLOY_SSH_KEY: ${{ secrets.DEPLOY_SSH_KEY }}
      - name: Remove old systemd service file
        run: |
          ssh -i deploy_key.pem -o StrictHostKeyChecking=no ${{ secrets.DEPLOY_SERVER }} "rm -f /etc/systemd/system/monitor.service"
      - name: List workspace contents
        run: |
          echo "Listing deployment folder contents:"
          ls -la ${{ github.workspace }}/deployment
      - name: Copy systemd service file
        run: |
          scp -i deploy_key.pem -o StrictHostKeyChecking=no ${{ github.workspace }}/deployment/monitor.service ${{ secrets.DEPLOY_SERVER }}:/tmp/monitor.service
          ssh -i deploy_key.pem -o StrictHostKeyChecking=no ${{ secrets.DEPLOY_SERVER }} "mv /tmp/monitor.service /etc/systemd/system/monitor.service"
      - name: Start application
        run: |
          ssh -i deploy_key.pem -o StrictHostKeyChecking=no ${{ secrets.DEPLOY_SERVER }} "ls -la"
          ssh -i deploy_key.pem -o StrictHostKeyChecking=no ${{ secrets.DEPLOY_SERVER }} "make ${{ env.DEPLOY_DIRECTORY }} start_monitor"
          ssh -i deploy_key.pem -o StrictHostKeyChecking=no ${{ secrets.DEPLOY_SERVER }} "systemctl daemon-reload && systemctl restart monitor.service"